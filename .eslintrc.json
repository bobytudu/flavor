{
    "env": {
        "browser": true,
        "es2021": true,
        "jest": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:react/recommended",
        "plugin:prettier/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": [
        "@typescript-eslint",
        "react",
        "prettier"
    ],
    "rules": {
        "no-async-promise-executor": "error", // Disallow using an async function as a Promise executor
        "no-unsafe-optional-chaining": "error", // Disallow use of optional chaining in contexts where the undefined value is not allowed
        "no-prototype-builtins": 0, // Disallow calling some Object.prototype methods directly on objects
        "no-extra-semi": 0, // Disallow unnecessary semicolons
        "no-empty": 0, // Disallow empty block statements
        "no-useless-catch": 0, // Disallow unnecessary `catch` clauses
        "no-empty-function": 0, // Disallow empty functions
        "no-debugger": 0, // Disallow the use of `debugger`
        // "prettier/prettier": "off",
        "prettier/prettier": [
            "warn",
            {
                "bracketSpacing": true,
                "printWidth": 160,
                "singleQuote": true,
                "semi": false,
                "trailingComma": "none",
                "tabWidth": 2,
                "useTabs": false,
                "bracketSameLine": true,
                "singleAttributePerLine": true,
                "endOfLine": "auto"
            }
        ],
        "@typescript-eslint/ban-ts-ignore": 0, // Disallow @ts-ignore
        "@typescript-eslint/no-extra-semi": 0, // Disallow unnecessary semicolons
        "@typescript-eslint/ban-ts-comment": 0, // Disallow @ts-<directive> comments or require descriptions after directives
        "@typescript-eslint/ban-types": 0, // Disallow certain types
        "@typescript-eslint/no-empty-interface": 0, // Disallow the declaration of empty interfaces
        "@typescript-eslint/no-var-requires": 0, // Disallow require statements except in import statements
        "@typescript-eslint/no-empty-function": 0, // Disallow empty functions
        "@typescript-eslint/no-explicit-any": 0, // Disallow the any type
        "@typescript-eslint/no-non-null-assertion": 0, // Disallow non-null assertions using the ! postfix operator
        "react/self-closing-comp": [
            "error",
            {
                "component": true,
                "html": true
            }
        ],
        "jsx-quotes": [
            "warn",
            "prefer-double"
        ],
        "react-hooks/exhaustive-deps": 0, // Warns us when we have a missing dependency in an effect hook.
        "react/jsx-uses-react": 0,
        "react/react-in-jsx-scope": 0,
        "react/jsx-key": 0,
        "react/prop-types": 0, // Experimental
        "react/no-unescaped-entities": 0, // Experimental
        "react/no-unknown-property": 0, // Experimental
        "react/jsx-no-target-blank": 0, // Experimental
        "react/display-name": 0,
        "@typescript-eslint/no-unused-vars": 1,
        "prefer-const": [
            "off",
            {
                "destructuring": "any",
                "ignoreReadBeforeAssign": false
            }
        ]
    }
}