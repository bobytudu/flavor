{
    "env": {
        "browser": true,
        "es2021": true,
        "jest": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:react/recommended",
        "plugin:prettier/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": [
        "@typescript-eslint",
        "react",
        "prettier"
    ],
    "rules": {
        "no-async-promise-executor": "error", // Disallow using an async function as a Promise executor
        "no-unsafe-optional-chaining": "error", // Disallow use of optional chaining in contexts where the undefined value is not allowed
        "no-prototype-builtins": "off", // Disallow calling some Object.prototype methods directly on objects
        "no-extra-semi": "off", // Disallow unnecessary semicolons
        "no-empty": "off", // Disallow empty block statements
        "no-useless-catch": "off", // Disallow unnecessary `catch` clauses
        "no-empty-function": "off", // Disallow empty functions
        "no-debugger": "off", // Disallow the use of `debugger`
        "prettier/prettier": "off",
        // "prettier/prettier": [
        //     "warn",
        //     {
        //         "bracketSpacing": true,
        //         "printWidth": 160,
        //         "singleQuote": true,
        //         "semi": false,
        //         "trailingComma": "none",
        //         "tabWidth": 2,
        //         "useTabs": false,
        //         "bracketSameLine": true,
        //         "singleAttributePerLine": true,
        //         "endOfLine": "auto"
        //     }
        // ],
        "@typescript-eslint/ban-ts-ignore": "off", // Disallow @ts-ignore
        "@typescript-eslint/no-extra-semi": "off", // Disallow unnecessary semicolons
        "@typescript-eslint/ban-ts-comment": "off", // Disallow @ts-<directive> comments or require descriptions after directives
        "@typescript-eslint/ban-types": "off", // Disallow certain types
        "@typescript-eslint/no-empty-interface": "off", // Disallow the declaration of empty interfaces
        "@typescript-eslint/no-var-requires": "off", // Disallow require statements except in import statements
        "@typescript-eslint/no-empty-function": "off", // Disallow empty functions
        "@typescript-eslint/no-explicit-any": "off", // Disallow the any type
        "@typescript-eslint/no-non-null-assertion": "off", // Disallow non-null assertions using the ! postfix operator
        "react/self-closing-comp": [
            "error",
            {
                "component": true,
                "html": true
            }
        ],
        "jsx-quotes": [
            "warn",
            "prefer-double"
        ],
        "react-hooks/exhaustive-deps": "off", // Warns us when we have a missing dependency in an effect hook.
        "react/jsx-uses-react": 0,
        "react/react-in-jsx-scope": 0,
        "react/jsx-key": "off",
        "react/prop-types": "off", // Experimental
        "react/no-unescaped-entities": "off", // Experimental
        "react/no-unknown-property": "off", // Experimental
        "react/jsx-no-target-blank": "off", // Experimental
        "react/display-name": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "prefer-const": [
            "off",
            {
                "destructuring": "any",
                "ignoreReadBeforeAssign": false
            }
        ]
    }
}